alg: ContrastiveRL
alg_kwargs:
  entropy_coefficient: null
  target_entropy: 0.0
  tau: 0.005
  bc_coef: 0.05

optim: Adam
optim_kwargs:
  lr: 0.0003

network: ContrastiveRLNetwork
network_kwargs:
  actor_class: DiagonalGaussianMLPActor
  actor_kwargs:
    hidden_layers: [1024, 1024]
    log_std_bounds: [-5, 2]
    state_dependent_log_std: False
    log_std_tanh: False
    squash_normal: False
    act: ["import", "torch.nn", "ReLU"]
    output_act: ["import", "torch.nn", "Tanh"]
  value_class: ContrastiveGoalCritic
  value_kwargs:
    repr_dim: 16
    ensemble_size: 2
    repr_norm: False
    repr_norm_temp: False
    ortho_init: False
    output_gain: none

# No train env, only eval env
eval_env: offline_goal_ant_umaze

dataset: GoalConditionedAntDataset
dataset_kwargs:
  name: offline_goal_ant_umaze
  d4rl_path: null
  discount: 1.0
  reward_fn: ["import", "graph_offline_imitation.envs.antmaze", "negative_ant_sparse"]
  batch_size: 1024
  relabel_fraction: 1.0
  terminal_threshold: 0.5
  nstep: 1

processor: PureDesiredGoalProcessor

schedule: null # A learning rate schedule
checkpoint: null # A checkpoint to initialize the model from

trainer_kwargs: # Arguments given to trainer
  total_steps: 1000000 # GoFar saturates at 20*20*(500 epochs) = 200000k steps
  log_freq: 1000 # How often to log values
  eval_freq: 10000 # How often to run evals
  checkpoint_freq: 100000
  eval_fn: eval_policy
  eval_kwargs:
    num_ep: 20 # Number of enviornment episodes to run for evaluation, or -1 if none should be run.
  loss_metric: reward # The validation metric that determines when to save the "best_checkpoint"
  train_dataloader_kwargs:
    num_workers: 0 # Number of dataloader workers.
    batch_size: null
    collate_fn: null
  profile_freq: 500

seed: null
